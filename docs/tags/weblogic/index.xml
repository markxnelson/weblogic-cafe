<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>weblogic on WebLogic Café</title>
    <link>http://weblogic.cafe/tags/weblogic/</link>
    <description>Recent content in weblogic on WebLogic Café</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>Copyright (c) 2018, Mark Nelson</copyright>
    <lastBuildDate>Mon, 04 Feb 2019 12:16:44 -0500</lastBuildDate>
    
	<atom:link href="http://weblogic.cafe/tags/weblogic/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Configuring a WebLogic Data Source to use ATP</title>
      <link>http://weblogic.cafe/posts/atp-datasource/</link>
      <pubDate>Mon, 04 Feb 2019 12:16:44 -0500</pubDate>
      
      <guid>http://weblogic.cafe/posts/atp-datasource/</guid>
      <description>In this post I am going to share details about how to configure a WebLogic data source to use ATP.
If you are not familiar with ATP, it is the new Autonomous Transaction Processing service on Oracle Cloud. It provides a fully managed autonomous database. You can create a new database in the OCI console in the Database menu under &amp;ldquo;Autonomous Transaction Processing&amp;rdquo; by clicking on that big blue button:</description>
    </item>
    
    <item>
      <title>WebLogic on OpenShift</title>
      <link>http://weblogic.cafe/posts/weblogic-on-openshift/</link>
      <pubDate>Sat, 19 Jan 2019 08:30:16 -0500</pubDate>
      
      <guid>http://weblogic.cafe/posts/weblogic-on-openshift/</guid>
      <description>Note: This post is also available on the official WebLogic Server blog.
In this post I am going to walk through setting up and using WebLogic on OpenShift, using the Oracle WebLogic Server Kubernetes Operator. My starting point is the OpenShift Container Platform server that I set up on OCI in this earlier post.
I am going to use the operator to manage my domains in OpenShift. The operator pattern is common in Kubernetes for managing complex software products that have special lifecycle requirements, different to the base assumptions made by Kubernetes.</description>
    </item>
    
    <item>
      <title>WebLogic Kubernetes Operator 2.0 Release Candidate 2 now available</title>
      <link>http://weblogic.cafe/posts/wko2rc2/</link>
      <pubDate>Wed, 16 Jan 2019 17:14:28 -0500</pubDate>
      
      <guid>http://weblogic.cafe/posts/wko2rc2/</guid>
      <description>We have just made our 2.0 Release Candidate 2 of the Oracle WebLogic Server Kubernetes Operator available for early adopters.
The 2.0 release adds some significant new features including:
 Support for burning your WebLogic domain into the Docker image, in addition to supporting the domain being on persistent storage, The operator is now installed using Helm charts, replacing the earlier scripts, You can override domain configuration using configuration override templates, Load balancers and Ingress can now be independently configured, WebLogic logs can be directed to a persistent volume or the WebLogic server console output (stdout) can be directed to the pod log, Added lifecycle support for servers and significantly more configurability for generated pods.</description>
    </item>
    
    <item>
      <title>WebLogic Kubernetes Operator 2.0 Release Candidate now available</title>
      <link>http://weblogic.cafe/posts/wko2rc/</link>
      <pubDate>Sat, 22 Dec 2018 08:00:23 -0500</pubDate>
      
      <guid>http://weblogic.cafe/posts/wko2rc/</guid>
      <description>We have just made our 2.0 Release Candidate 1 of the Oracle WebLogic Server Kubernetes Operator available for early adopters.
The 2.0 release adds some significant new features including:
 Support for burning your WebLogic domain into the Docker image, in addition to supporting the domain being on persistent storage, The operator is now installed using Helm charts, replacing the earlier scripts, You can override domain configuration using configuration override templates, Load balancers and Ingress can now be independently configured, WebLogic logs can be directed to a persistent volume or the WebLogic server console output (stdout) can be directed to the pod log, Added lifecycle support for servers and significantly more configurability for generated pods.</description>
    </item>
    
  </channel>
</rss>